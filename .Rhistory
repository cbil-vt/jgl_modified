devtools::load_all(".")
install.packages("plotly")
library(plotly)
fig <- plot_ly(midwest, x = ~percollege, color = ~state, type = "box")
fig
devtools::load_all(".")
pkgbuild::check_build_tools(debug = TRUE)
devtools::load_all(".")
devtools::load_all(".")
# Settings ----
dat = readRDS("./data/jgl_bad_40179.rds")
dat
# Settings ----
res = readRDS("./data/jgl_bad_40179.rds")
dat1_sel = res$dat1_sel
dat2_sel = res$dat2_sel
dat_lst = list(dat1_sel, dat2_sel)
# Run ----
l1 = res$l1
l2 = res$l2
out = JGL(
dat_lst,
lambda1 = l1,
lambda2 = l2,
return.whole.theta = TRUE
)
devtools::load_all(".")
out = JGL(
dat_lst,
lambda1 = l1,
lambda2 = l2,
return.whole.theta = TRUE
)
out = JGL(
dat_lst,
lambda1 = l1,
lambda2 = l2,
return.whole.theta = TRUE
)
out = JGL(
dat_lst,
lambda1 = l1,
lambda2 = l2,
return.whole.theta = TRUE
)
sum(unconnected)
blocklist
blocklist[[1]]
blocklist[[2]]
blocklist
length(blocklist)
D
theta
A
rho
lam1
lam2
A[[1]]-A[[2]]
L
lamb2
lam2
c
devtools::load_all(".")
out = JGL(
dat_lst,
lambda1 = l1,
lambda2 = l2,
return.whole.theta = TRUE
)
devtools::load_all(".")
devtools::load_all(".")
out = JGL(
dat_lst,
lambda1 = l1,
lambda2 = l2,
return.whole.theta = TRUE
)
out = JGL(
dat_lst,
lambda1 = l1,
lambda2 = l2,
return.whole.theta = TRUE
)
A
imag(A[[1]])
Im(A[[1]])
max(abs(Im(A[[1]])))
devtools::load_all(".")
devtools::load_all(".")
devtools::load_all(".")
devtools::load_all(".")
out = JGL(
dat_lst,
lambda1 = l1,
lambda2 = l2,
return.whole.theta = TRUE
)
A[[1]]
W
W[[1]]
W[[2]]
theta[[1]]
theta[[2]]
D2
V
devtools::load_all(".")
out = JGL(
dat_lst,
lambda1 = l1,
lambda2 = l2,
return.whole.theta = TRUE
)
S[[1]]
n[1]
n[2]
W[[1]]
Z[[1]]
rho
S[[1]]
D
V
xx = S[[k]] - rho*Z[[k]]/n[k] + rho*W[[k]]/n[k]
xx - t(xx)
devtools::load_all(".")
out = JGL(
dat_lst,
lambda1 = l1,
lambda2 = l2,
return.whole.theta = TRUE
)
x1 = out$theta[[1]]
x2 = out$theta[[2]]
fig <- plot_ly(z = x1_thr, type = "heatmap")
fig
library(plotly)
fig <- plot_ly(z = x1_thr, type = "heatmap")
fig
fig <- plot_ly(z = x1, type = "heatmap")
fig
pkgbuild::check_build_tools(debug = TRUE)
devtools::load_all(".")
